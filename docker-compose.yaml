version: '3'

services:

  zookeeper:
    container_name: zookeeper_container
    image: zookeeper
    restart: always
    ports:
      - ${ZOO_PORT}:2181

  kafka:
    container_name: kafka_container
    image: wurstmeister/kafka
    restart: always
    ports:
      - ${KAFKA_PORT}:9092
    environment:
      KAFKA_ADVERTISED_HOST_NAME: ${KAFKA_HOST}
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:${ZOO_PORT}
      KAFKA_CREATE_TOPICS: ${KAFKA_TOPICS}
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://${KAFKA_HOST}:${KAFKA_PORT}"
    depends_on:
      - zookeeper
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  postgres:
    container_name: postgres_container
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_NAME}
      POSTGRES_PASSWORD: ${POSTGRES_PW}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - ${POSTGRES_PORT}:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    
  pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PG_MAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PG_PW}
    ports:
      - ${PG_PORT}:80
    depends_on: 
      - postgres
    volumes:
      - pgadmin_data:/var/lib/pgadmin

  app:
    container_name: app_container
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - ${FLASK_PORT}:5000
    volumes:
      - .:/backend

volumes:
  kafka_data:
    driver: local
  pgadmin_data:
    driver: local
  postgres_data:
    driver: local